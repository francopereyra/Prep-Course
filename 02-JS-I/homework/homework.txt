1.
Variables: Son como pequeñas "cajas virtuales" que adentro contienen algo. Ese algo puede mantenerse en el tiempo o puede ser reemplazado por otras cosas la cantidad de veces que necesitemos. Siempre que querramos ver qué hay adentro de la caja basta con que escribamos su nombre y se nos muestra qué hay adentro.

Strings: En informática es sinónimo de palabra; sería mas bien como una "palabra digital". Su traducción al español sería "cadena" y significa que podemos pensar que cada letra de una palabra está unida a la siguiente como si fuesen eslabones de una cadena.

Funciones(argumentos, return): Una función es una serie de indicaciones que nos permite realizar una o muchas operaciones cada vez que la nombramos. Es una forma fácil de no repetir lo mismo muchas veces; basta que agrupe todas las indicaciones bajo un "nombre de función" para que luego, cada vez que mencione ese "nombre de función", se realicen todos las indicaciones que había dado previamente. Muchas veces, cuando voy a dar las indicaciones, necesito darle a mi función una serie de valores "iniciales", específicos para cada vez que la llame a entrar en acción. Esos valores iniciales se llaman "argumentos". Cada función, adentro de sí misma, tiene una orden que se llama "return" y que indica específicamente cuál es la respuesta que debe dar la función cada vez que se la llama. Entonces, lo que esté indicado como "return" de mi función es la respuesta concreta que me dará cuando le pida entrar en acción, más allá de todas las otras operaciones que pueda pedirle que realice y que estén adentro de mi función.

Declaraciones if: Cuando escribo un código para que realice una serie de operaciones, muchas veces necesito tomar decisiones en función de datos variables que me pueden aparecer dentro del mismo código. Entonces aparece una herramienta muy importante, que son las declaraciones if. Estas declaraciones me permiten decidir si realizo una o muchas acciones en función de si se cumplen o no las condiciones que yo les preestablezco. Dicho de otra manera, puedo delegarle a mi computadora la tarea de que decida realizar una tarea u otra dependiendo de si se cumple o no una condición específica. Más claro aún: si se cumple una condición, la máquina resuelve de un modo; si no se cumple esa condición, resuelve de otro.

Valores booleanos (true, false): En la informática es muy necesario tener claramente definidos dos valores opuestos que puedan representar dos estados antagónicos. Cuando la computadora va a evaluar una condición, debe poder saber claramente si eso es veradero o es falso, sin puntos intermedios. Existe un tipo de datos específicos para esto que se llama "valores booleanos"; dentro de estos datos, sólo existen dos datos válidos: true (cuando es verdadero) o false (cuando es falso). Nada más que esas dos opciones, sin ningún valor intermedio.